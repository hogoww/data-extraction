digraph{
"Visualisation.Transition" -> "Visualisation.CallGraphGenerator + Visualisation.Transition" [label="4.0",arrowhead="none"];
"Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass + logic.Test" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + Test + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass + logic.Test" [label="0.0",arrowhead="none"];
"step2.MethodDeclarationVisitor" -> "step2.MethodDeclarationVisitor + step2.Parser" [label="4.0",arrowhead="none"];
"step2.MethodDeclarationVisitor + step2.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor" -> "step2.MethodDeclarationVisitor + step2.TypeDeclarationVisitor + step2.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor + step2.FieldAccessVisitor" [label="0.0",arrowhead="none"];
"Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + Visualisation.Transition + logic.NodeClass" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass" [label="3.0",arrowhead="none"];
"step2.TypeDeclarationVisitor + step2.FieldAccessVisitor" -> "step2.MethodDeclarationVisitor + step2.TypeDeclarationVisitor + step2.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor + step2.FieldAccessVisitor" [label="0.0",arrowhead="none"];
"Test" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + Test + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass + logic.Test" [label="0.0",arrowhead="none"];
"logic.ClassGraph" -> "logic.CallGraphVisitor + logic.ClassGraph" [label="8.0",arrowhead="none"];
"step2.VariableDeclarationFragmentVisitor" -> "step2.MethodDeclarationVisitor + step2.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor" [label="2.0",arrowhead="none"];
"step2.MethodDeclarationVisitor + step2.TypeDeclarationVisitor + step2.Parser + step1.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor + step2.FieldAccessVisitor" -> "Visualisation.CallGraphGenerator + step2.MethodDeclarationVisitor + logic.MethodCaller + step2.TypeDeclarationVisitor + logic.ClassGraph + step2.Parser + step1.Parser + step2.VariableDeclarationFragmentVisitor + logic.MethodInvocationVisitor + main.Main + logic.Test + step2.MethodInvocationVisitor + step2.FieldAccessVisitor + logic.CallGraphVisitor + Test + Visualisation.Transition + logic.NodeClass" [label="0.0",arrowhead="none"];
"step2.MethodDeclarationVisitor + step2.TypeDeclarationVisitor + step2.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor + step2.FieldAccessVisitor" -> "step2.MethodDeclarationVisitor + step2.TypeDeclarationVisitor + step2.Parser + step1.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor + step2.FieldAccessVisitor" [label="0.0",arrowhead="none"];
"Visualisation.CallGraphGenerator + Visualisation.Transition" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + Visualisation.Transition + logic.NodeClass" [label="3.0",arrowhead="none"];
"Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass + logic.Test" [label="2.0",arrowhead="none"];
"logic.MethodCaller" -> "logic.MethodCaller + logic.NodeClass" [label="8.0",arrowhead="none"];
"step2.Parser" -> "step2.MethodDeclarationVisitor + step2.Parser" [label="4.0",arrowhead="none"];
"logic.CallGraphVisitor + logic.ClassGraph" -> "logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.NodeClass" [label="12.0",arrowhead="none"];
"step2.FieldAccessVisitor" -> "step2.TypeDeclarationVisitor + step2.FieldAccessVisitor" [label="0.0",arrowhead="none"];
"logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + logic.NodeClass" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + Visualisation.Transition + logic.NodeClass" [label="3.0",arrowhead="none"];
"logic.MethodCaller + logic.NodeClass" -> "logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.NodeClass" [label="12.0",arrowhead="none"];
"main.Main" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass" [label="3.0",arrowhead="none"];
"logic.Test" -> "Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass + logic.Test" [label="2.0",arrowhead="none"];
"logic.NodeClass" -> "logic.MethodCaller + logic.NodeClass" [label="8.0",arrowhead="none"];
"step2.MethodInvocationVisitor" -> "step2.MethodDeclarationVisitor + step2.Parser + step2.MethodInvocationVisitor" [label="2.0",arrowhead="none"];
"logic.CallGraphVisitor" -> "logic.CallGraphVisitor + logic.ClassGraph" [label="8.0",arrowhead="none"];
"logic.MethodInvocationVisitor" -> "logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + logic.NodeClass" [label="4.0",arrowhead="none"];
"step1.Parser" -> "step2.MethodDeclarationVisitor + step2.TypeDeclarationVisitor + step2.Parser + step1.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor + step2.FieldAccessVisitor" [label="0.0",arrowhead="none"];
"step2.MethodDeclarationVisitor + step2.Parser" -> "step2.MethodDeclarationVisitor + step2.Parser + step2.MethodInvocationVisitor" [label="2.0",arrowhead="none"];
"step2.MethodDeclarationVisitor + step2.Parser + step2.MethodInvocationVisitor" -> "step2.MethodDeclarationVisitor + step2.Parser + step2.VariableDeclarationFragmentVisitor + step2.MethodInvocationVisitor" [label="2.0",arrowhead="none"];
"logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.NodeClass" -> "logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + logic.MethodInvocationVisitor + logic.NodeClass" [label="4.0",arrowhead="none"];
"step2.TypeDeclarationVisitor" -> "step2.TypeDeclarationVisitor + step2.FieldAccessVisitor" [label="0.0",arrowhead="none"];
"Visualisation.CallGraphGenerator" -> "Visualisation.CallGraphGenerator + Visualisation.Transition" [label="4.0",arrowhead="none"];
"Visualisation.CallGraphGenerator + logic.MethodCaller + logic.CallGraphVisitor + logic.ClassGraph + Test + logic.MethodInvocationVisitor + main.Main + Visualisation.Transition + logic.NodeClass + logic.Test" -> "Visualisation.CallGraphGenerator + step2.MethodDeclarationVisitor + logic.MethodCaller + step2.TypeDeclarationVisitor + logic.ClassGraph + step2.Parser + step1.Parser + step2.VariableDeclarationFragmentVisitor + logic.MethodInvocationVisitor + main.Main + logic.Test + step2.MethodInvocationVisitor + step2.FieldAccessVisitor + logic.CallGraphVisitor + Test + Visualisation.Transition + logic.NodeClass" [label="0.0",arrowhead="none"];

 }
